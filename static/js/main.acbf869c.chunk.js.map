{"version":3,"sources":["components/calculator/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","state","expression","result","undefined","updateExpression","value","cursorIndexInArray","findIndex","x","newExpression","splice","setState","moveCursor","direction","newCursorIndexInArray","calculateResult","cleanExpression","cursorIndex","_this","join","axios","post","expr","precision","then","response","data","catch","error","console","log","resetExpression","className","this","map","char","index","resultMarkup","onClick","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUA+IeA,E,4MAzIXC,MAAQ,CACJC,WAAY,CAAC,KACbC,YAAQC,G,EAGZC,iBAAmB,SAACC,GAAW,IAEnBJ,EAAe,EAAKD,MAApBC,WACFK,EAAqBL,EAAWM,WAAU,SAAAC,GAAC,MAAU,MAANA,KAC/CC,EAAa,YAAOR,GAE1BQ,EAAcC,OAAOJ,EAAoB,GACzCG,EAAcC,OAAd,MAAAD,EAAa,CAAQH,EAAoB,GAA5B,OAAkC,CAACD,EAAO,OAEvD,EAAKM,UAAS,SAAAX,GACV,OAAO,2BACAA,GADP,IAEIC,WAAYQ,Q,EAKxBG,WAAa,SAACC,GAAe,IAEjBZ,EAAe,EAAKD,MAApBC,WACFK,EAAqBL,EAAWM,WAAU,SAAAC,GAAC,MAAU,MAANA,KAErD,EAAKG,UAAS,SAAAX,GACV,IAAMc,EAAsC,SAAdD,EAAuBP,EAAqB,EAAIA,EAAqB,EAC7FG,EAAa,YAAOR,GAK1B,OAHAQ,EAAcC,OAAOJ,EAAoB,GACzCG,EAAcC,OAAOI,EAAuB,EAAG,KAExC,2BACAd,GADP,IAEIC,WAAYQ,Q,EAOxBM,gBAAkB,WAEd,IAAIC,EAAe,YAAO,EAAKhB,MAAMC,YAC/BgB,EAAcD,EAAgBT,WAAU,SAAAC,GAAC,MAAU,MAANA,KAC7CU,EAAK,eAEXF,EAAgBN,OAAOO,EAAa,GACpCD,EAAkBA,EAAgBG,KAAK,IAEvCC,IAAMC,KAAK,4BAA6B,CACpCC,KAAMN,EACNO,UAAW,IAEdC,MAAK,SAAUC,GACZP,EAAMP,UAAS,SAACX,GACZ,OAAO,2BACAA,GADP,IAEIE,OAAQuB,EAASC,KAAKxB,eAIjCyB,OAAM,SAAUC,GACbC,QAAQC,IAAIF,O,EAKpBG,gBAAkB,WAEd,EAAKpB,SAAS,CACVV,WAAY,CAAC,KACbC,YAAQC,K,4CAKhB,WAAW,IAAD,OAaN,OACI,qBAAK6B,UAAU,MAAf,SAEI,sBAAKA,UAAU,aAAf,UAEI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,yBAAhB,SACMC,KAAKjC,MAAMC,WAAWiC,KAAI,SAACC,EAAMC,GAC/B,OAAQ,+BAAoBD,GAATC,QAG3B,sBAAMJ,UAAU,qBAAhB,SAtBK,WACjB,IAAI9B,EAAS,EAAKF,MAAME,OAExB,GAAIA,EACA,OACI,sCAAUA,EAAV,OAkBUmC,QAIV,qBAAKL,UAAU,2CAA2CM,QAAS,kBAAM,EAAKlC,iBAAiB,MAA/F,eACA,qBAAK4B,UAAU,gDAAgDM,QAAS,kBAAM,EAAKlC,iBAAiB,MAApG,eACA,qBAAK4B,UAAU,gDAAgDM,QAAS,kBAAM,EAAKlC,iBAAiB,MAApG,eACA,qBAAK4B,UAAU,8CAA8CM,QAAS,kBAAM,EAAKlC,iBAAiB,MAAlG,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oDAAoDM,QAAS,kBAAM,EAAKlC,iBAAiB,MAAxG,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,qDAAqDM,QAAS,kBAAM,EAAKlC,iBAAiB,MAAzG,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,8CAA8CM,QAASL,KAAKlB,gBAA3E,iBACA,qBAAKiB,UAAU,iDAAiDM,QAAS,kBAAM,EAAK1B,WAAW,SAA/F,iBACA,qBAAKoB,UAAU,oBAAoBM,QAAS,kBAAM,EAAKlC,iBAAiB,IAAxE,eACA,qBAAK4B,UAAU,kDAAkDM,QAAS,kBAAM,EAAK1B,WAAW,UAAhG,iBACA,qBAAKoB,UAAU,6CAA6CM,QAAS,kBAAM,EAAKP,mBAAhF,0B,GAjIKQ,aCMVC,G,MANH,kBACR,qBAAKR,UAAU,MAAf,SACI,cAAC,EAAD,QCMOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.acbf869c.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './Calculator.scss';\r\n\r\nclass Calculator extends Component {\r\n\r\n    state = {\r\n        expression: ['|'],\r\n        result: undefined\r\n    }\r\n\r\n    updateExpression = (value) => {\r\n\r\n        const { expression } = this.state;\r\n        const cursorIndexInArray = expression.findIndex(x => x === '|');\r\n        const newExpression = [...expression];\r\n\r\n        newExpression.splice(cursorIndexInArray, 1);\r\n        newExpression.splice(cursorIndexInArray, 0, ...[value, '|']);\r\n\r\n        this.setState(state => {\r\n            return {\r\n                ...state,\r\n                expression: newExpression\r\n            }\r\n        });\r\n    }\r\n\r\n    moveCursor = (direction) => {\r\n\r\n        const { expression } = this.state;\r\n        const cursorIndexInArray = expression.findIndex(x => x === '|');\r\n\r\n        this.setState(state => {\r\n            const newCursorIndexInArray = direction === 'left' ? cursorIndexInArray - 1 : cursorIndexInArray + 1;\r\n            const newExpression = [...expression];\r\n\r\n            newExpression.splice(cursorIndexInArray, 1);\r\n            newExpression.splice(newCursorIndexInArray, 0, '|');\r\n\r\n            return {\r\n                ...state,\r\n                expression: newExpression\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    calculateResult = () => {\r\n\r\n        let cleanExpression = [...this.state.expression];\r\n        const cursorIndex = cleanExpression.findIndex(x => x === '|');\r\n        const _this = this;\r\n\r\n        cleanExpression.splice(cursorIndex, 1);\r\n        cleanExpression = cleanExpression.join('');\r\n\r\n        axios.post('http://api.mathjs.org/v4/', {\r\n            expr: cleanExpression,\r\n            precision: 2\r\n        })\r\n        .then(function (response) {\r\n            _this.setState((state) => {\r\n                return {\r\n                    ...state,\r\n                    result: response.data.result\r\n                }\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    resetExpression = () => {\r\n\r\n        this.setState({\r\n            expression: ['|'],\r\n            result: undefined\r\n        });\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        const resultMarkup = () => {\r\n            let result = this.state.result;\r\n\r\n            if (result) {\r\n                return (\r\n                    <span> ={ result } </span>\r\n                );\r\n            }\r\n        };\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <div className=\"calculator\">\r\n\r\n                    <div className=\"calculator__screen\">\r\n                        <span className=\"calculator__expression\">\r\n                            { this.state.expression.map((char, index) => {\r\n                                return  <span key={index}>{ char }</span>\r\n                            }) }\r\n                        </span>\r\n                        <span className=\"calculator__result\">\r\n                            { resultMarkup() }\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"calculator__field calculator__field--add\" onClick={() => this.updateExpression('+')}>+</div>\r\n                    <div className=\"calculator__field calculator__field--subtract\" onClick={() => this.updateExpression('-')}>-</div>\r\n                    <div className=\"calculator__field calculator__field--multiply\" onClick={() => this.updateExpression('*')}>*</div>\r\n                    <div className=\"calculator__field calculator__field--divide\" onClick={() => this.updateExpression('/')}>/</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(1)}>1</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(2)}>2</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(3)}>3</div>\r\n                    <div className=\"calculator__field calculator__field--open_bracket\" onClick={() => this.updateExpression('(')}>(</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(4)}>4</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(5)}>5</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(6)}>6</div>\r\n                    <div className=\"calculator__field calculator__field--close_bracket\" onClick={() => this.updateExpression(')')}>)</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(7)}>7</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(8)}>8</div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(9)}>9</div>\r\n                    <div className=\"calculator__field calculator__field--equals\" onClick={this.calculateResult}> = </div>\r\n                    <div className=\"calculator__field calculator__field--move_left\" onClick={() => this.moveCursor('left')}> &lt; </div>\r\n                    <div className=\"calculator__field\" onClick={() => this.updateExpression(0)}>0</div>\r\n                    <div className=\"calculator__field calculator__field--move_right\" onClick={() => this.moveCursor('right')}> &gt; </div>\r\n                    <div className=\"calculator__field calculator__field--clear\" onClick={() => this.resetExpression()}> C </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\nimport Calculator from './components/calculator/Calculator';\r\nimport './App.scss';\r\n\r\nconst App = () => (\r\n    <div className=\"App\">\r\n        <Calculator />\r\n    </div>\r\n);\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}